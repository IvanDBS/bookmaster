#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è PostgreSQL –¥–æ –≤–µ—Ä—Å–∏–∏ 17 —Å JIT
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/upgrade_postgresql_17.sh [dev|prod]

set -e

ENVIRONMENT=${1:-dev}
COMPOSE_FILE="docker-compose.${ENVIRONMENT}.yml"

echo "üöÄ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ PostgreSQL –¥–æ –≤–µ—Ä—Å–∏–∏ 17 —Å JIT –¥–ª—è –æ–∫—Ä—É–∂–µ–Ω–∏—è: $ENVIRONMENT"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞ docker-compose
if [ ! -f "$COMPOSE_FILE" ]; then
    echo "‚ùå –§–∞–π–ª $COMPOSE_FILE –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –¥–∞–Ω–Ω—ã—Ö..."
BACKUP_FILE="backup_$(date +%Y%m%d_%H%M%S).sql"

if [ "$ENVIRONMENT" = "dev" ]; then
    docker-compose -f $COMPOSE_FILE exec -T db pg_dump -U postgres bookmaster_development > $BACKUP_FILE
elif [ "$ENVIRONMENT" = "prod" ]; then
    docker-compose -f $COMPOSE_FILE exec -T db pg_dump -U postgres bookmaster_production > $BACKUP_FILE
fi

echo "‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: $BACKUP_FILE"

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose -f $COMPOSE_FILE down

# –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö volumes (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
read -p "–£–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä—ã–µ volumes? (y/N): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo "üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö volumes..."
    docker-compose -f $COMPOSE_FILE down -v
fi

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≥–µ–º–æ–≤
echo "üíé –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≥–µ–º–æ–≤..."
cd backend
bundle update pg
cd ..

# –ó–∞–ø—É—Å–∫ —Å –Ω–æ–≤—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
echo "üöÄ –ó–∞–ø—É—Å–∫ —Å PostgreSQL 17..."
docker-compose -f $COMPOSE_FILE up -d

# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
sleep 10

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ PostgreSQL
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ PostgreSQL..."
VERSION=$(docker-compose -f $COMPOSE_FILE exec -T db psql -U postgres -t -c "SELECT version();" | head -1)
echo "üìä –í–µ—Ä—Å–∏—è PostgreSQL: $VERSION"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ JIT —Å—Ç–∞—Ç—É—Å–∞
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ JIT —Å—Ç–∞—Ç—É—Å–∞..."
docker-compose -f $COMPOSE_FILE exec web bundle exec rake postgresql:check_jit

# –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
if [ -f "$BACKUP_FILE" ]; then
    read -p "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏? (y/N): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        echo "üì• –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö..."
        if [ "$ENVIRONMENT" = "dev" ]; then
            docker-compose -f $COMPOSE_FILE exec -T db psql -U postgres bookmaster_development < $BACKUP_FILE
        elif [ "$ENVIRONMENT" = "prod" ]; then
            docker-compose -f $COMPOSE_FILE exec -T db psql -U postgres bookmaster_production < $BACKUP_FILE
        fi
        echo "‚úÖ –î–∞–Ω–Ω—ã–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    fi
fi

# –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π
echo "üîÑ –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π..."
docker-compose -f $COMPOSE_FILE exec web bundle exec rails db:migrate

# –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
echo "‚úÖ –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞..."
docker-compose -f $COMPOSE_FILE exec web bundle exec rake postgresql:test_jit

echo "üéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ PostgreSQL –¥–æ –≤–µ—Ä—Å–∏–∏ 17 —Å JIT –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo "üìã –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: docker-compose -f $COMPOSE_FILE exec web bundle exec rake postgresql:check_jit"
